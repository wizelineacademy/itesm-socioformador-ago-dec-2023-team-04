// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  authId     String  @unique
  email      String  @unique
  givenName  String
  familyName String
  groups     Group[]
  admin      Boolean
}

model Tutor {
  id Int @id @default(autoincrement())

  givenName   String
  familyName  String
  phoneNumber String
  email       String

  students Student[]

  tutorNotifications TutorNotification[]
}

model Student {
  id            Int    @id @default(autoincrement())
  registration  String
  givenName     String
  familyName    String
  biometricData Bytes

  tutors Tutor[]

  groups Group[]

  attendances        Attendance[]
  tutorNotifications TutorNotification[]
}

model Color {
  id     Int     @id @default(autoincrement())
  code   String  @db.VarChar(6)
  groups Group[]
}

model Group {
  id Int @id @default(autoincrement())

  name        String
  active      Boolean
  description String
  entryHour   DateTime @db.Time()
  exitHour    DateTime @db.Time()
  tz          String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  color   Color @relation(fields: [colorId], references: [id])
  colorId Int

  students Student[]

  attendances Attendance[]
}

model Attendance {
  id                  Int      @id @default(autoincrement())
  attendanceDate      DateTime @db.Date()
  attendanceEntryHour DateTime @db.Time()
  attendanceExitHour  DateTime @db.Time()

  group   Group @relation(fields: [groupId], references: [id])
  groupId Int

  student   Student @relation(fields: [studentId], references: [id])
  studentId Int
}

model TutorNotification {
  id Int @id @default(autoincrement())

  student   Student @relation(fields: [studentId], references: [id])
  studentId Int

  tutor   Tutor @relation(fields: [tutorId], references: [id])
  tutorId Int

  message  String
  sentTime DateTime
}
