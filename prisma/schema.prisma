// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl", "linux-musl-openssl-3.0.x"]
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  authId     String  @unique
  givenName  String
  familyName String
  groups     Group[]
  admin      Boolean
  email      String
}

model Tutor {
  id Int @id @default(autoincrement())

  givenName   String
  familyName  String
  phoneNumber String
  email       String

  students Student[]

  tutorNotifications TutorNotification[]
}

model Student {
  id            Int     @id @default(autoincrement())
  registration  String
  givenName     String
  familyName    String
  biometricData Float[]

  tutors Tutor[]

  attendances        Attendance[]
  tutorNotifications TutorNotification[]
  groups             StudentInGroup[]
}

model StudentInGroup {
  student   Student @relation(fields: [studentId], references: [id])
  studentId Int

  group   Group @relation(fields: [groupId], references: [id])
  groupId Int

  joinedAt DateTime @default(now()) @db.Date()

  @@id([studentId, groupId])
}

model Color {
  id     Int     @id @default(autoincrement())
  code   String  @db.VarChar(6)
  groups Group[]
}

model Group {
  id Int @id @default(autoincrement())

  name        String
  active      Boolean
  description String
  entryHour   DateTime @db.Time()
  duration    Int
  tz          String

  enabledMonday    Boolean
  enabledTuesday   Boolean
  enabledWednesday Boolean
  enabledThursday  Boolean
  enabledFriday    Boolean
  enabledSaturday  Boolean
  enabledSunday    Boolean

  color   Color @relation(fields: [colorId], references: [id])
  colorId Int

  users User[]

  attendances Attendance[]
  students    StudentInGroup[]
}

enum AttendanceType {
  ON_TIME
  LATE
  JUSTIFICATED_ABSENCE
}

model Attendance {
  attendanceDate      DateTime @db.Date()
  attendanceEntryHour DateTime @db.Time()
  attendanceExitHour  DateTime @db.Time()

  type AttendanceType

  group   Group @relation(fields: [groupId], references: [id])
  groupId Int

  student   Student @relation(fields: [studentId], references: [id])
  studentId Int

  @@id([groupId, studentId, attendanceDate])
}

model TutorNotification {
  id Int @id @default(autoincrement())

  student   Student @relation(fields: [studentId], references: [id])
  studentId Int

  tutor   Tutor @relation(fields: [tutorId], references: [id])
  tutorId Int

  message  String
  sentTime DateTime
}
